
Actor Auto9_3D: Auto9 replaces Auto9
{
	States
	{
	Fire:
		NULL A 0 A_GunFlash
		AUT9 B 0 Bright A_PlaySound("auto9/fire")
		"####" # 0 A_JumpIf(GetCVAR("rvw_weapons")==1, "Fire.Enhanced")
		AUT9 B 2 Bright A_FireBullets(5,2,1,10,"BulletPuff")
		AUT9 B 2 A_CheckReload
		AUT9 B 2 Bright A_FireBullets(5,2,1,10,"BulletPuff")
		AUT9 B 2 A_CheckReload
		AUT9 B 2 Bright A_FireBullets(5,2,1,10,"BulletPuff")
		AUT9 C 8
		AUT9 B 2 A_Refire
		Goto ready
	Fire.Enhanced:
		AUT9 B 2 Bright A_FireBullets(5,2,1,10,"EnBulletPuff")
		AUT9 B 2 A_CheckReload
		AUT9 B 2 Bright A_FireBullets(5,2,1,10,"EnBulletPuff")
		AUT9 B 2 A_CheckReload
		AUT9 B 2 Bright A_FireBullets(5,2,1,10,"EnBulletPuff")
		AUT9 C 8
		AUT9 B 2 A_Refire
		AUT9 A 0 A_FireProjectile("GunBarrelSmoke",0,0,0,0,FPF_NOAUTOAIM,0)
		Goto ready
	Flash:
		TNT1 A 0 A_JumpIf(GetCVAR("rvw_tracers")==false, "GunBarrelFlash")
		TNT1 A 0 A_FireProjectile("BulletTracer",random(-1,1),0,0,0,FPF_NOAUTOAIM,random(-1,1))
		A9MF A 2 Bright A_Light2
		TNT1 A 1 A_Light1
		TNT1 A 1 A_Light0
		TNT1 A 0 A_FireProjectile("BulletTracer",random(-1,1),0,0,0,FPF_NOAUTOAIM,random(-1,1))
		A9MF A 2 Bright A_Light2
		TNT1 A 1 A_Light1
		TNT1 A 1 A_Light0
		TNT1 A 0 A_FireProjectile("BulletTracer",random(-1,1),0,0,0,FPF_NOAUTOAIM,random(-1,1))
		A9MF A 2 Bright A_Light2
		TNT1 A 2 A_Light1
		TNT1 A 2 A_Light0
		Stop
	GunBarrelFlash:
		TNT1 A 0 A_JumpIf(GetCVAR("rvw_weapons_mf")==true, "MuzzleFlash")
		TNT1 A 2 Bright A_Light2
		TNT1 A 1 A_Light1
		TNT1 A 1 A_Light0
		TNT1 A 2 Bright A_Light2
		TNT1 A 1 A_Light1
		TNT1 A 1 A_Light0
		TNT1 A 2 Bright A_Light2
		TNT1 A 2 A_Light1
		TNT1 A 2 A_Light0
		Stop
	MuzzleFlash:
		A9MF A 2 Bright A_Light2
		TNT1 A 1 A_Light1
		TNT1 A 1 A_Light0
		A9MF A 2 Bright A_Light2
		TNT1 A 1 A_Light1
		TNT1 A 1 A_Light0
		A9MF A 2 Bright A_Light2
		TNT1 A 2 A_Light1
		TNT1 A 2 A_Light0
		Stop
	Spawn:
		AUT9 P 0 A_JumpIf(GetCVAR("rvw_pickupmodel")==1, "Spawn3D")
		AUT9 P 1
		loop
	Spawn3D:
		AUT9 P 0 A_JumpIf(GetCVAR("rvw_pickupmodel")==0, "Spawn")
		AUTP A 1 Bright
		loop
	}
}